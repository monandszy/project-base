# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
junit-jupiter = "5.10.2"
lombok = "1.18.32"
spring-boot-plugin = "3.2.2"
spring-dependency-plugin = "1.1.5"
spring-modulith = "1.2.1"
loki-logback-appender = "1.5.1"
mapstruct = "1.6.0.Beta2"
mapstruct-lombok = "0.2.0"

[libraries]
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
junit-platform = { module = "org.junit.platform:junit-platform-launcher" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
spring-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-tymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf" }
spring-modulith-core = { module = "org.springframework.modulith:spring-modulith-starter-core" }
spring-modulith-events = { module = "org.springframework.modulith:spring-modulith-events-api", version.ref = "spring-modulith" }
sprint-test = { module = "org.springframework.boot:spring-boot-starter-test" }
sprint-modulith-test = { module = "org.springframework.modulith:spring-modulith-starter-test" }
spring-dev-tools = {module = "org.springframework.boot:spring-boot-devtools"}

#(runtimeOnly) Strange autoconfiguration errors in docker environments, disabled until absolutely needed
#spring-moudlith-actuator = { module = "org.springframework.modulith:spring-modulith-actuator", version.ref = "spring-modulith" }
spring-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }
micrometer-brave = { module = "io.micrometer:micrometer-tracing-bridge-brave" }
zipkin = { module = "io.zipkin.reporter2:zipkin-reporter-brave" }
loki-logging = { module = "com.github.loki4j:loki-logback-appender", version.ref = "loki-logback-appender" }

mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
mapstruct-lombok = { module = "org.projectlombok:lombok-mapstruct-binding", version.ref = "mapstruct-lombok" }

spring-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
test-postgresql = { module = "org.testcontainers:postgresql" }
test-jupiter = { module = "org.testcontainers:junit-jupiter" }

[bundles]
spring-web = ["spring-web", "spring-tymeleaf"]
spring-modulith = ["spring-modulith-core", "spring-modulith-events"]
spring-test = ["sprint-test", "sprint-modulith-test"]
test-containers = ["spring-testcontainers", "test-postgresql", "test-jupiter"]
observability = ["spring-actuator", "micrometer-prometheus", "micrometer-brave", "zipkin", "loki-logging"]
mapstruct-annotation = ["mapstruct-processor", "mapstruct-lombok"]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot-plugin" }
spring-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-plugin" }